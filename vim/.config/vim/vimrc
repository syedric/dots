let data_dir = '~/.config/vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

if !isdirectory(expand('~/.config/vim/undo'))
  call mkdir(expand('~/.config/vim/undo'), 'p')
endif


call plug#begin()
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'
Plug 'mbbill/undotree'
Plug 'itchyny/lightline.vim'
Plug 'rose-pine/vim'
call plug#end()

let g:disable_bg=1
colorscheme rosepine

let g:lightline = {
      \ 'colorscheme': 'rosepine',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'FugitiveHead'
      \ },
      \ }

" --- General ---
set nocompatible
set encoding=utf-8
set fileencoding=utf-8
set nohidden
set mouse=a
set clipboard=unnamedplus
set history=1000

" --- File Handling ---
set autoread
set undofile
set undodir=~/.config/vim/undo
set noswapfile

" --- UI Enhancements ---
set number
set relativenumber
set cursorline
set ruler
set laststatus=2
set showcmd
set noshowmode
set wildmenu
set wildmode=longest:full,full
set signcolumn=yes
set scrolloff=5
set sidescrolloff=5
set lazyredraw
set ttyfast
set termguicolors
set linebreak
set breakindent

" --- Searching ---
set ignorecase
set smartcase
set incsearch
set hlsearch
set showmatch

" --- Indentation ---
set tabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent
set breakindent

" --- Behavior ---
set updatetime=300
set timeoutlen=500
set shortmess+=c
set formatoptions+=j
set completeopt=menuone,noinsert,noselect
set splitbelow
set splitright

" --- Syntax & Filetype ---
syntax on
filetype plugin indent on

" --- AutoCmds ---
autocmd BufWritePost $MYVIMRC source $MYVIMRC | echo "Reloaded .vimrc"
autocmd BufWritePre * %s/\s\+$//e
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
autocmd BufReadPost *
      \ if line("'\"") > 0 && line("'\"") <= line("$") |
      \   execute "normal! g`\"" |
      \ endif

" --- Key Mappings ---
let mapleader = " "

nnoremap j gj
nnoremap k gk
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>

" --- One Less Key ---
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

nnoremap <leader><space> :nohlsearch<CR>
vnoremap <C-C> :<C-u>call system('wl-copy', join(getline("'<", "'>"), "\n"))<CR>

